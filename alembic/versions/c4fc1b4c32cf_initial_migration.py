"""Initial migration

Revision ID: c4fc1b4c32cf
Revises: 
Create Date: 2024-03-10 20:26:26.735141

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c4fc1b4c32cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actionlog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('log', sa.String(), nullable=True),
    sa.Column('user', sa.String(), nullable=True),
    sa.Column('log_date', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_actionlog_id'), 'actionlog', ['id'], unique=False)
    op.create_table('book_author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_book_author_id'), 'book_author', ['id'], unique=False)
    op.create_table('book_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_book_category_id'), 'book_category', ['id'], unique=False)
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isbn_10', sa.String(), nullable=True),
    sa.Column('isbn_13', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('subtitle', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('published_date', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('print_type', sa.String(), nullable=True),
    sa.Column('maturity_rating', sa.String(), nullable=True),
    sa.Column('condition', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_index(op.f('ix_books_isbn_10'), 'books', ['isbn_10'], unique=False)
    op.create_index(op.f('ix_books_isbn_13'), 'books', ['isbn_13'], unique=False)
    op.create_index(op.f('ix_books_publisher'), 'books', ['publisher'], unique=False)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('hardware_brand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_hardware_brand_id'), 'hardware_brand', ['id'], unique=False)
    op.create_table('hardware_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_hardware_category_id'), 'hardware_category', ['id'], unique=False)
    op.create_table('initdb',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('software_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_category_id'), 'software_category', ['id'], unique=False)
    op.create_table('software_developer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_developer_id'), 'software_developer', ['id'], unique=False)
    op.create_table('software_platform',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_platform_id'), 'software_platform', ['id'], unique=False)
    op.create_table('software_publisher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_publisher_id'), 'software_publisher', ['id'], unique=False)
    op.create_table('software_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_type_id'), 'software_type', ['id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('tag_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'tag_type', name='_name_tag_type_uc')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('reset_token', sa.String(), nullable=True),
    sa.Column('books_api_key', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('book_author_association',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['book_author.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.create_table('book_category_association',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('book_category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_category_id'], ['book_category.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'book_category_id')
    )
    op.create_table('component_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hardware_category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hardware_category_id'], ['hardware_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_component_type_id'), 'component_type', ['id'], unique=False)
    op.create_table('item_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('software',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('publisher_id', sa.Integer(), nullable=True),
    sa.Column('developer_id', sa.Integer(), nullable=True),
    sa.Column('platform_id', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('media_type_id', sa.Integer(), nullable=True),
    sa.Column('media_count', sa.Integer(), nullable=True),
    sa.Column('condition', sa.String(), nullable=True),
    sa.Column('product_key', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('multiple_copies', sa.Boolean(), nullable=True),
    sa.Column('multicopy_id', sa.Integer(), nullable=True),
    sa.Column('image_backups', sa.Boolean(), nullable=True),
    sa.Column('image_backup_location', sa.String(), nullable=True),
    sa.Column('redump_disk_ids', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['software_category.id'], ),
    sa.ForeignKeyConstraint(['developer_id'], ['software_developer.id'], ),
    sa.ForeignKeyConstraint(['media_type_id'], ['software_type.id'], ),
    sa.ForeignKeyConstraint(['platform_id'], ['software_platform.id'], ),
    sa.ForeignKeyConstraint(['publisher_id'], ['software_publisher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_software_id'), 'software', ['id'], unique=False)
    op.create_table('hardware',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('component_type_id', sa.Integer(), nullable=True),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('condition', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('is_new', sa.Boolean(), nullable=True),
    sa.Column('purchase_date', sa.String(), nullable=True),
    sa.Column('purchased_from', sa.String(), nullable=True),
    sa.Column('store_link', sa.String(), nullable=True),
    sa.Column('photos', sa.String(), nullable=True),
    sa.Column('user_manual', sa.String(), nullable=True),
    sa.Column('invoice', sa.String(), nullable=True),
    sa.Column('barcode', sa.String(), nullable=True),
    sa.Column('repair_history', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['hardware_brand.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['hardware_category.id'], ),
    sa.ForeignKeyConstraint(['component_type_id'], ['component_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hardware_id'), 'hardware', ['id'], unique=False)
    op.create_table('software_tags',
    sa.Column('software_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['software_id'], ['software.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('software_id', 'tag_id')
    )
    op.create_table('hardware_tags',
    sa.Column('hardware_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hardware_id'], ['hardware.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('hardware_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('hardware_tags')
    op.drop_table('software_tags')
    op.drop_index(op.f('ix_hardware_id'), table_name='hardware')
    op.drop_table('hardware')
    op.drop_index(op.f('ix_software_id'), table_name='software')
    op.drop_table('software')
    op.drop_table('item_locations')
    op.drop_index(op.f('ix_component_type_id'), table_name='component_type')
    op.drop_table('component_type')
    op.drop_table('book_category_association')
    op.drop_table('book_author_association')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_software_type_id'), table_name='software_type')
    op.drop_table('software_type')
    op.drop_index(op.f('ix_software_publisher_id'), table_name='software_publisher')
    op.drop_table('software_publisher')
    op.drop_index(op.f('ix_software_platform_id'), table_name='software_platform')
    op.drop_table('software_platform')
    op.drop_index(op.f('ix_software_developer_id'), table_name='software_developer')
    op.drop_table('software_developer')
    op.drop_index(op.f('ix_software_category_id'), table_name='software_category')
    op.drop_table('software_category')
    op.drop_table('locations')
    op.drop_table('initdb')
    op.drop_index(op.f('ix_hardware_category_id'), table_name='hardware_category')
    op.drop_table('hardware_category')
    op.drop_index(op.f('ix_hardware_brand_id'), table_name='hardware_brand')
    op.drop_table('hardware_brand')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_publisher'), table_name='books')
    op.drop_index(op.f('ix_books_isbn_13'), table_name='books')
    op.drop_index(op.f('ix_books_isbn_10'), table_name='books')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_table('books')
    op.drop_index(op.f('ix_book_category_id'), table_name='book_category')
    op.drop_table('book_category')
    op.drop_index(op.f('ix_book_author_id'), table_name='book_author')
    op.drop_table('book_author')
    op.drop_index(op.f('ix_actionlog_id'), table_name='actionlog')
    op.drop_table('actionlog')
    # ### end Alembic commands ###
